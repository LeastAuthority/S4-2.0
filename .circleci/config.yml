# https://circleci.com/docs/2.0/configuration-reference/

version: 2
jobs:
  tests:
    docker:
      - image: "fpco/stack-build:lts-12.13"

    environment:
      CI: "1"

    steps:
      # Get the source
      - "checkout"

      # Get stack, caching as much as we can.
      - restore_cache:
          keys:
            - stack-ghc-{{ checksum "s4/stack.yaml" }}
      - restore_cache:
          keys:
            - stack-deps-{{ checksum "s4/s4.cabal" }}
      - run:
          name: "Set up Stack"
          command: "stack setup --no-terminal --no-reinstall"
      - save_cache:
          key: stack-ghc-{{ checksum "s4/stack.yaml" }}
          paths:
            - "/root/.stack"
      - run:
          name: "Install dependencies"
          working_directory: "s4"
          command: "stack build --skip-ghc-check --no-terminal --test --only-dependencies"
      - save_cache:
          key: stack-deps-{{ checksum "s4/s4.cabal" }}
          paths:
            - "/root/.stack"
            - ".stack-work"

      # Build and run the tests.
      - run:
          name: "Build"
          working_directory: "s4"
          command: "stack build --no-terminal --coverage"
      - run:
          name: "Set up output path"
          working_directory: "s4"
          command: "mkdir -p test-results/unit-tests"
      - run:
          name: "Test"
          working_directory: "s4"
          command: "stack test --no-terminal --coverage"

      # Give the test results to CircleCI for additional processing and presentation.
      - store_test_results:
          path: "s4/test-results"

      # Get the coverage report uploaded as an artifact.
      - store_artifacts:
          # It would be nice to be able to extract this from the `stack test` command somehow.
          path: "s4/.stack-work/install/x86_64-linux/lts-12.13/8.4.3/hpc/"
          destination: "coverage"

  s4-nix-build:
    docker:
      - image: "nixorg/nix:circleci"

    steps:
      # Get the source
      - "checkout"

      # Get some certificate authority certificates so the CircleCI caching tools will work.
      - run:
          name: "Install CA Certificates"
          command: "nix-env --install nss-cacert"

      - restore_cache:
          keys:
            # Make sure the Nix version here matches the nix-channel command below.
            - nix-store-18.09-{{ checksum "s4/s4.nix" }}
            - nix-store-18.09-

      # Build S4
      - run:
          name: "Build S4 Derivation"
          command: |
            # Make sure the Nix version here matches the restore_cache / save_cache keys.
            nix-channel --add https://nixos.org/channels/nixos-18.09-small nixpkgs
            nix-channel --update
            # Turn off optimization in the build.  Or put another way, optimize this for buildtime not runtime.
            nix-build \
              --show-trace \
              --expr \
                'with import <nixpkgs> { overlays = [ (import ./ops/nixpkgs-overlays.nix) ]; }; callPackage ./s4 { ghc-option = "-O0"; }'

      - save_cache:
          # Make sure the Nix version here matches the nix-channel command above.
          key: nix-store-18.09-{{ checksum "s4/s4.nix" }}
          paths:
            - "/nix/store"

workflows:
  version: 2
  workflow:
    jobs:
      - "tests"
      - "s4-nix-build"
